Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 
Constraints:
1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1

/*---PLEASE TRY TO SOLVE FOR ATLEAST 15-20 MINUTES BEFOR JUMPING TO CODE---*/


//first approach: Space optimal / operation sub optimal

 public void moveZeroes(int[] nums) 
 {
      int zeroPointer = 0;
        
      for(int i=0;i<nums.length;i++)
      {
        if(nums[i]!=0)
         {
            nums[zeroPointer++] = nums[i]; //Append all non zero elements to the starting of the array.
         }
      }    
      for(int i=zeroPointer;i<nums.length;i++)
      {
        nums[i] = 0; //Secondly append all zero elements to the end of the array.     
      }
  }
  
